[gd_scene load_steps=4 format=2]

[ext_resource path="res://sprites/minimap/object.png" type="Texture" id=1]

[sub_resource type="GDScript" id=3]
script/source = "extends Node2D

const SCALING = 5.0;

var objects = [];
var player;

func _ready() -> void:
	call_deferred(\"load_object\");

func load_object() -> void:
	var object_node = $npc/obj;
	$npc.remove_child(object_node);
	
	for i in get_tree().get_nodes_in_group(\"damageable\"):
		if (i is Player):
			player = i;
			continue;
		
		var node = object_node.duplicate();
		var obj_pos = i.global_transform.origin;
		node.position = Vector2(obj_pos.x, obj_pos.z) * SCALING;
		$npc.add_child(node);
		objects.append([node, i]);

func _process(delta: float) -> void:
	if (player):
		var player_pos = player.global_transform.origin;
		$camera.position = Vector2(player_pos.x, player_pos.z) * SCALING;
	
	for i in objects:
		var node = i[0];
		var obj = i[1];
		
		if (obj.health <= 0.0):
			objects.erase(i);
			node.queue_free();
			continue;
		
		var obj_pos = obj.global_transform.origin;
		node.position = Vector2(obj_pos.x, obj_pos.z) * SCALING;
"

[sub_resource type="GDScript" id=2]
script/source = "extends Camera2D

const OFFSET = Vector2(2, -3);

func _ready() -> void:
	#pass
	look_at(transform.origin + OFFSET);
"

[node name="map" type="Node2D"]
script = SubResource( 3 )

[node name="npc" type="Node2D" parent="."]

[node name="obj" type="Sprite" parent="npc"]
modulate = Color( 0.94902, 0.172549, 0.172549, 1 )
position = Vector2( 200, 0 )
scale = Vector2( 0.3, 0.3 )
texture = ExtResource( 1 )

[node name="camera" type="Camera2D" parent="."]
rotating = true
current = true
drag_margin_h_enabled = false
drag_margin_v_enabled = false
script = SubResource( 2 )

[node name="player" type="Sprite" parent="camera"]
modulate = Color( 1, 0.956863, 0.290196, 1 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 1 )
